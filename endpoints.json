{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api"
  },
  "GET /api/topics": {
    "description": "serves an array of all topics",
    "queries": [],
    "exampleResponse": {
      "topics": [{ "slug": "football", "description": "Footie!" }]
    }
  },
  "GET /api/articles": {
    "description": "serves an array of all articles sorted by date in a descending order",
    "queries": [
      { 
        "query": "author", 
        "values": [] 
      },
      { 
        "query": "topic", 
        "values": ["mitch", "cats", "paper"] 
      },
      {
        "query": "sort_by",
        "values": [
          "article_id",
          "title",
          "topic",
          "author",
          "created_at",
          "comment_count",
          "votes",
          "article_img_url"
        ]
      },
      { 
        "query": "order", 
        "values": ["asc", "desc"] 
      }
    ],
    "exampleResponse": {
      "articles": [
        {
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "author": "weegembump",
          "body": "Text from the article..",
          "created_at": "2020-11-03T09:12:00.000Z",
          "votes": 5,
          "comment_count": 0
        },
        {
          "title": "Article Title...",
          "topic": "Article Topic...",
          "author": "Article Author...",
          "body": "Text from the article..",
          "created_at": "2020-10-18T01:00:00.000Z",
          "votes": 0,
          "comment_count": 8
        },
        {
          "title": "Article Title...",
          "topic": "Article Topic...",
          "author": "Article Author...",
          "body": "Text from the article..",
          "created_at": "2020-10-18T01:00:00.000Z",
          "votes": 10,
          "comment_count": 3
        }
      ]
    }
  },
  "GET /api/articles/:article_id": {
    "description": "serves an article object of the specified id with a comment_count key representing total count of comments for that article",
    "queries": [],
    "exampleResponse": {
      "article": {
        "article_id": 5,
        "title": "Article Title...",
        "topic": "Article Topic...",
        "author": "Article Author...",
        "body": "Article Text...",
        "created_at": "2020-07-09T20:11:00.000Z",
        "votes": 0,
        "article_img_url": "img URL...",
        "comment_count": 2
      }
    }
  },
  "GET /api/articles/:article_id/comments": {
    "description": "serves an array of comments for the specified article sorted with most recent comments appearing first",
    "queries": [],
    "exampleResponse": {
      "comments": [
        {
          "comment_id": 3,
          "body": "Comment Text...",
          "article_id": 1,
          "author": "Comment Author...",
          "votes": 10,
          "created_at": "2020-09-19T23:10:00.000Z"
        },
        {
          "comment_id": 8,
          "body": "Comment Text...",
          "article_id": 1,
          "author": "Comment Author...",
          "votes": 3,
          "created_at": "2020-06-20T07:24:00.000Z"
        }
      ]
    }
  },
  "POST /api/articles/:article_id/comments": {
    "description": "posts a comment to an article and responds with the newly posted comment",
    "queries": [],
    "required format": {
      "username": "Username123",
      "body": "Hello, there!"
    },
    "exampleResponse": {
      "comment": "Hello, there!"
    }
  },
  "PATCH /api/articles/:article_id": {
    "description": "updates the votes of the specified article by the value (negative or positive) given inside inc_votes",
    "queries": [],
    "required format": {
      "inc_votes": 20
    },
    "exampleResponse": {
      "article": {
        "article_id": 8,
        "title": "Article Title...",
        "topic": "Article Topic...",
        "author": "Article Author...",
        "body": "Article Text...",
        "created_at": "2020-06-20T07:24:00.000Z",
        "votes": 20,
        "article_img_url": "img URL..."
      }
    }
  },
  "DELETE /api/comments/:comment_id": {
    "description": "deletes the specified comment with no response sent back",
    "queries": []
  },
  "GET /api/users": {
    "description": "serves an array of all users",
    "queries": [],
    "exampleResponse": {
      "users": [
        {
          "username": "someUsername",
          "name": "someName",
          "avatar_url": "some URL"
        },
        {
          "username": "anotherUsername",
          "name": "anotherName",
          "avatar_url": "another URL"
        }
      ]
    }
  },
  "GET /api/users/:username": {
    "description": "serves a user object based on the specified username",
    "queries": [],
    "exampleResponse": {
      "user": {
        "username": "someUsername",
        "name": "someName",
        "avatar_url": "some URL"
      }
    }
  },
  "PATCH /api/comments/:comment_id": {
    "description": "updates the votes of the specified comment by the value (negative or positive) given inside inc_votes",
    "queries": [],
    "required format": {
      "inc_votes": 20
    },
    "exampleResponse": {
      "comment": {
        "comment_id": 4,
        "body": "Comment Text...",
        "article_id": 2,
        "author": "Comment Author...",
        "votes": 20,
        "created_at": "2020-06-20T07:24:00.000Z"
      }
    }
  }
}
